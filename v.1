import { MaterialIcons } from "@expo/vector-icons";
import * as Location from "expo-location";
import { useEffect, useState } from "react";
import { ActivityIndicator, StyleSheet, Text, View } from "react-native";
import MapView, { Marker } from "react-native-maps";

export default function HomeScreen() {
  const [truckLocation, setTruckLocation] = useState(null);
  const [userLocation, setUserLocation] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const simulateTruckMovement = () => {
    const baseLat = 19.4326;
    const baseLng = -99.1332;

    const interval = setInterval(() => {
      setTruckLocation({
        latitude: baseLat + (Math.random() * 0.01 - 0.005),
        longitude: baseLng + (Math.random() * 0.01 - 0.005),
      });
    }, 5000);

    return () => clearInterval(interval);
  };

  // Obtener ubicación del usuario
  const getUserLocation = async () => {
    try {
      let { status } = await Location.requestForegroundPermissionsAsync();
      if (status !== "granted") {
        setError("Permiso de ubicación denegado");
        return;
      }

      let location = await Location.getCurrentPositionAsync({});
      setUserLocation({
        latitude: location.coords.latitude,
        longitude: location.coords.longitude,
      });

      simulateTruckMovement();
    } catch (err) {
      setError("Error al obtener la ubicación");
      console.error(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    getUserLocation();
  }, []);

  if (loading) {
    return (
      <View style={styles.loadingContainer}>
        <ActivityIndicator size="large" color="#2e7d32" />
        <Text style={styles.loadingText}>Obteniendo ubicación...</Text>
      </View>
    );
  }

  if (error) {
    return (
      <View style={styles.errorContainer}>
        <MaterialIcons name="error-outline" size={60} color="#d32f2f" />
        <Text style={styles.errorText}>{error}</Text>
        <Text style={styles.suggestionText}>
          Por favor verifica los permisos de ubicación
        </Text>
      </View>
    );
  }

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Rastreo Camión de Basura</Text>

      <View style={styles.statusContainer}>
        <MaterialIcons name="local-shipping" size={24} color="#2e7d32" />
        <Text style={styles.statusText}>Camión en ruta de recolección</Text>
      </View>

      {userLocation && (
        <MapView
          style={styles.map}
          initialRegion={{
            latitude: userLocation.latitude,
            longitude: userLocation.longitude,
            latitudeDelta: 0.05,
            longitudeDelta: 0.05,
          }}
        >
          <Marker
            coordinate={userLocation}
            title="Tu ubicación"
            pinColor="#4285F4"
          />

          {truckLocation && (
            <Marker
              coordinate={truckLocation}
              title="Camión de basura"
              pinColor="#0F9D58"
            />
          )}
        </MapView>
      )}

      <View style={styles.instructions}>
        <MaterialIcons name="info" size={20} color="#555" />
        <Text style={styles.instructionsText}>
          Notificación automática cuando el camión esté cerca (500m)
        </Text>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: "#f5f5f5",
  },
  loadingContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  loadingText: {
    marginTop: 10,
    fontSize: 16,
    color: "#555",
  },
  errorContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    padding: 20,
  },
  errorText: {
    fontSize: 18,
    color: "#d32f2f",
    marginTop: 10,
    textAlign: "center",
  },
  suggestionText: {
    fontSize: 16,
    color: "#555",
    marginTop: 10,
    textAlign: "center",
  },
  title: {
    fontSize: 22,
    fontWeight: "bold",
    color: "#2e7d32",
    textAlign: "center",
    marginBottom: 20,
  },
  statusContainer: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center",
    marginBottom: 15,
    padding: 10,
    backgroundColor: "#e8f5e9",
    borderRadius: 8,
  },
  statusText: {
    marginLeft: 8,
    fontSize: 16,
    color: "#2e7d32",
  },
  map: {
    width: "100%",
    height: "60%",
    borderRadius: 8,
    marginBottom: 15,
  },
  instructions: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center",
    padding: 10,
    backgroundColor: "#f5f5f5",
    borderRadius: 8,
  },
  instructionsText: {
    marginLeft: 8,
    fontSize: 14,
    color: "#555",
    textAlign: "center",
  },
});
